// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.12.3
// source: service.proto

package enrollapi

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SigningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformIdentity       []byte `protobuf:"bytes,1,opt,name=platformIdentity,proto3" json:"platformIdentity,omitempty"`
	EndorsementCertificate []byte `protobuf:"bytes,3,opt,name=endorsementCertificate,proto3" json:"endorsementCertificate,omitempty"`
	EndorsementKey         []byte `protobuf:"bytes,4,opt,name=endorsementKey,proto3" json:"endorsementKey,omitempty"`
	AttestationKey         []byte `protobuf:"bytes,5,opt,name=attestationKey,proto3" json:"attestationKey,omitempty"`
	DevIDKey               []byte `protobuf:"bytes,6,opt,name=devIDKey,proto3" json:"devIDKey,omitempty"`
	CertifyData            []byte `protobuf:"bytes,10,opt,name=certifyData,proto3" json:"certifyData,omitempty"`
	CertifySignature       []byte `protobuf:"bytes,11,opt,name=certifySignature,proto3" json:"certifySignature,omitempty"`
}

func (x *SigningRequest) Reset() {
	*x = SigningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningRequest) ProtoMessage() {}

func (x *SigningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningRequest.ProtoReflect.Descriptor instead.
func (*SigningRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *SigningRequest) GetPlatformIdentity() []byte {
	if x != nil {
		return x.PlatformIdentity
	}
	return nil
}

func (x *SigningRequest) GetEndorsementCertificate() []byte {
	if x != nil {
		return x.EndorsementCertificate
	}
	return nil
}

func (x *SigningRequest) GetEndorsementKey() []byte {
	if x != nil {
		return x.EndorsementKey
	}
	return nil
}

func (x *SigningRequest) GetAttestationKey() []byte {
	if x != nil {
		return x.AttestationKey
	}
	return nil
}

func (x *SigningRequest) GetDevIDKey() []byte {
	if x != nil {
		return x.DevIDKey
	}
	return nil
}

func (x *SigningRequest) GetCertifyData() []byte {
	if x != nil {
		return x.CertifyData
	}
	return nil
}

func (x *SigningRequest) GetCertifySignature() []byte {
	if x != nil {
		return x.CertifySignature
	}
	return nil
}

type SigningResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttestationCertificate []byte `protobuf:"bytes,1,opt,name=attestationCertificate,proto3" json:"attestationCertificate,omitempty"`
	DevIDCertificate       []byte `protobuf:"bytes,2,opt,name=devIDCertificate,proto3" json:"devIDCertificate,omitempty"`
}

func (x *SigningResponse) Reset() {
	*x = SigningResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningResponse) ProtoMessage() {}

func (x *SigningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningResponse.ProtoReflect.Descriptor instead.
func (*SigningResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *SigningResponse) GetAttestationCertificate() []byte {
	if x != nil {
		return x.AttestationCertificate
	}
	return nil
}

func (x *SigningResponse) GetDevIDCertificate() []byte {
	if x != nil {
		return x.DevIDCertificate
	}
	return nil
}

type RawSigningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *RawSigningRequest) Reset() {
	*x = RawSigningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawSigningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawSigningRequest) ProtoMessage() {}

func (x *RawSigningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawSigningRequest.ProtoReflect.Descriptor instead.
func (*RawSigningRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

func (x *RawSigningRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RawSigningRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type EnrollRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RequestOrResponse:
	//	*EnrollRequest_SigningRequest
	//	*EnrollRequest_ChallengeResponse
	RequestOrResponse isEnrollRequest_RequestOrResponse `protobuf_oneof:"RequestOrResponse"`
}

func (x *EnrollRequest) Reset() {
	*x = EnrollRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollRequest) ProtoMessage() {}

func (x *EnrollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollRequest.ProtoReflect.Descriptor instead.
func (*EnrollRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{3}
}

func (m *EnrollRequest) GetRequestOrResponse() isEnrollRequest_RequestOrResponse {
	if m != nil {
		return m.RequestOrResponse
	}
	return nil
}

func (x *EnrollRequest) GetSigningRequest() *RawSigningRequest {
	if x, ok := x.GetRequestOrResponse().(*EnrollRequest_SigningRequest); ok {
		return x.SigningRequest
	}
	return nil
}

func (x *EnrollRequest) GetChallengeResponse() []byte {
	if x, ok := x.GetRequestOrResponse().(*EnrollRequest_ChallengeResponse); ok {
		return x.ChallengeResponse
	}
	return nil
}

type isEnrollRequest_RequestOrResponse interface {
	isEnrollRequest_RequestOrResponse()
}

type EnrollRequest_SigningRequest struct {
	SigningRequest *RawSigningRequest `protobuf:"bytes,1,opt,name=signingRequest,proto3,oneof"`
}

type EnrollRequest_ChallengeResponse struct {
	ChallengeResponse []byte `protobuf:"bytes,2,opt,name=challengeResponse,proto3,oneof"`
}

func (*EnrollRequest_SigningRequest) isEnrollRequest_RequestOrResponse() {}

func (*EnrollRequest_ChallengeResponse) isEnrollRequest_RequestOrResponse() {}

type Challenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CredentialBlob []byte `protobuf:"bytes,1,opt,name=credentialBlob,proto3" json:"credentialBlob,omitempty"`
	Secret         []byte `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *Challenge) Reset() {
	*x = Challenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Challenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Challenge) ProtoMessage() {}

func (x *Challenge) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Challenge.ProtoReflect.Descriptor instead.
func (*Challenge) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{4}
}

func (x *Challenge) GetCredentialBlob() []byte {
	if x != nil {
		return x.CredentialBlob
	}
	return nil
}

func (x *Challenge) GetSecret() []byte {
	if x != nil {
		return x.Secret
	}
	return nil
}

type EnrollResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ChallengeOrResponse:
	//	*EnrollResponse_Challenge
	//	*EnrollResponse_SigningResponse
	ChallengeOrResponse isEnrollResponse_ChallengeOrResponse `protobuf_oneof:"ChallengeOrResponse"`
}

func (x *EnrollResponse) Reset() {
	*x = EnrollResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollResponse) ProtoMessage() {}

func (x *EnrollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollResponse.ProtoReflect.Descriptor instead.
func (*EnrollResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{5}
}

func (m *EnrollResponse) GetChallengeOrResponse() isEnrollResponse_ChallengeOrResponse {
	if m != nil {
		return m.ChallengeOrResponse
	}
	return nil
}

func (x *EnrollResponse) GetChallenge() *Challenge {
	if x, ok := x.GetChallengeOrResponse().(*EnrollResponse_Challenge); ok {
		return x.Challenge
	}
	return nil
}

func (x *EnrollResponse) GetSigningResponse() *SigningResponse {
	if x, ok := x.GetChallengeOrResponse().(*EnrollResponse_SigningResponse); ok {
		return x.SigningResponse
	}
	return nil
}

type isEnrollResponse_ChallengeOrResponse interface {
	isEnrollResponse_ChallengeOrResponse()
}

type EnrollResponse_Challenge struct {
	Challenge *Challenge `protobuf:"bytes,1,opt,name=challenge,proto3,oneof"`
}

type EnrollResponse_SigningResponse struct {
	SigningResponse *SigningResponse `protobuf:"bytes,2,opt,name=signingResponse,proto3,oneof"`
}

func (*EnrollResponse_Challenge) isEnrollResponse_ChallengeOrResponse() {}

func (*EnrollResponse_SigningResponse) isEnrollResponse_ChallengeOrResponse() {}

var File_service_proto protoreflect.FileDescriptor

var file_service_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xb4, 0x02, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x36,
	0x0a, 0x16, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x16,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x26,
	0x0a, 0x0e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x49, 0x44, 0x4b,
	0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x65, 0x76, 0x49, 0x44, 0x4b,
	0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x79, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x75, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x61, 0x74, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x16, 0x61, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x49, 0x44, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x64, 0x65, 0x76,
	0x49, 0x44, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0x45, 0x0a,
	0x11, 0x52, 0x61, 0x77, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x0d, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x52, 0x61, 0x77, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x11, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x09, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x42, 0x6c, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x0e, 0x45, 0x6e, 0x72, 0x6f, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x15, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x4f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x3b, 0x0a, 0x0a, 0x45, 0x6e,
	0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x45, 0x6e, 0x72, 0x6f,
	0x6c, 0x6c, 0x12, 0x0e, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x68, 0x70, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x62, 0x65,
	0x63, 0x6b, 0x2f, 0x74, 0x70, 0x6d, 0x32, 0x2d, 0x6b, 0x65, 0x79, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData = file_service_proto_rawDesc
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_proto_rawDescData)
	})
	return file_service_proto_rawDescData
}

var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_service_proto_goTypes = []interface{}{
	(*SigningRequest)(nil),    // 0: SigningRequest
	(*SigningResponse)(nil),   // 1: SigningResponse
	(*RawSigningRequest)(nil), // 2: RawSigningRequest
	(*EnrollRequest)(nil),     // 3: EnrollRequest
	(*Challenge)(nil),         // 4: Challenge
	(*EnrollResponse)(nil),    // 5: EnrollResponse
}
var file_service_proto_depIdxs = []int32{
	2, // 0: EnrollRequest.signingRequest:type_name -> RawSigningRequest
	4, // 1: EnrollResponse.challenge:type_name -> Challenge
	1, // 2: EnrollResponse.signingResponse:type_name -> SigningResponse
	3, // 3: Enrollment.Enroll:input_type -> EnrollRequest
	5, // 4: Enrollment.Enroll:output_type -> EnrollResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigningResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawSigningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnrollRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Challenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnrollResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_service_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*EnrollRequest_SigningRequest)(nil),
		(*EnrollRequest_ChallengeResponse)(nil),
	}
	file_service_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*EnrollResponse_Challenge)(nil),
		(*EnrollResponse_SigningResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_rawDesc = nil
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EnrollmentClient is the client API for Enrollment service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EnrollmentClient interface {
	Enroll(ctx context.Context, opts ...grpc.CallOption) (Enrollment_EnrollClient, error)
}

type enrollmentClient struct {
	cc grpc.ClientConnInterface
}

func NewEnrollmentClient(cc grpc.ClientConnInterface) EnrollmentClient {
	return &enrollmentClient{cc}
}

func (c *enrollmentClient) Enroll(ctx context.Context, opts ...grpc.CallOption) (Enrollment_EnrollClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Enrollment_serviceDesc.Streams[0], "/Enrollment/Enroll", opts...)
	if err != nil {
		return nil, err
	}
	x := &enrollmentEnrollClient{stream}
	return x, nil
}

type Enrollment_EnrollClient interface {
	Send(*EnrollRequest) error
	Recv() (*EnrollResponse, error)
	grpc.ClientStream
}

type enrollmentEnrollClient struct {
	grpc.ClientStream
}

func (x *enrollmentEnrollClient) Send(m *EnrollRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *enrollmentEnrollClient) Recv() (*EnrollResponse, error) {
	m := new(EnrollResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// EnrollmentServer is the server API for Enrollment service.
type EnrollmentServer interface {
	Enroll(Enrollment_EnrollServer) error
}

// UnimplementedEnrollmentServer can be embedded to have forward compatible implementations.
type UnimplementedEnrollmentServer struct {
}

func (*UnimplementedEnrollmentServer) Enroll(Enrollment_EnrollServer) error {
	return status.Errorf(codes.Unimplemented, "method Enroll not implemented")
}

func RegisterEnrollmentServer(s *grpc.Server, srv EnrollmentServer) {
	s.RegisterService(&_Enrollment_serviceDesc, srv)
}

func _Enrollment_Enroll_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(EnrollmentServer).Enroll(&enrollmentEnrollServer{stream})
}

type Enrollment_EnrollServer interface {
	Send(*EnrollResponse) error
	Recv() (*EnrollRequest, error)
	grpc.ServerStream
}

type enrollmentEnrollServer struct {
	grpc.ServerStream
}

func (x *enrollmentEnrollServer) Send(m *EnrollResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *enrollmentEnrollServer) Recv() (*EnrollRequest, error) {
	m := new(EnrollRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Enrollment_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Enrollment",
	HandlerType: (*EnrollmentServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Enroll",
			Handler:       _Enrollment_Enroll_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "service.proto",
}
